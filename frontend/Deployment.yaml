---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: imv-live-frontend-service
  namespace: imv-live
spec:
  selector:
    matchLabels:
      run: imv-live-frontend-service
  replicas: 1
  template:
    metadata:
      labels:
        run: imv-live-frontend-service
      annotations:
        consul.sendo.vn/inject: "false"
        configmap.reloader.stakater.com/reload: "imv-frontend-config"
    spec:
      volumes:
      #- name: imv-frontend-config-volume
      #  configMap:
      #    name: imv-frontend-config
      - name: file-store
        persistentVolumeClaim:
          claimName: imv-live-nfs-master2
          readOnly: false
      containers:
        - name: imv-live-frontend-service
          image: registry.1retail-dev.asia/imv-live/imv-live-frontend-service:BUILD_NUMBER
          imagePullPolicy: Always
          env:
            - name: TZ
              value: Asia/Ho_Chi_Minh
          ports:
            - containerPort: 80
          volumeMounts:
          #  - name: imv-frontend-config-volume
          #    mountPath: /app/config
            - name: file-store
              mountPath: /usr/share/nginx/html/imgs/imv
          resources:
            limits:
              cpu: '0.4'
              memory: 1024Mi
            requests:
              cpu: '0.2'
              memory: 512Mi

          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
            timeoutSeconds: 3
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "sleep 15"]
---
apiVersion: v1
kind: Service
metadata:
  name: imv-live-frontend-service
  namespace: imv-live
  labels:
    tier: golang_mod
    run: imv-live-frontend-service
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: imv-live-frontend-service-http

  selector:
    run: imv-live-frontend-service

